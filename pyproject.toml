# Modern Python Project Configuration
#
# This file contains the complete project configuration using modern Python standards,
# including dependencies, testing, linting, and build configuration.

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "legacy-coin-trader"
version = "2.0.0"
description = "Modern cryptocurrency trading bot with enterprise-grade architecture"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.9"
authors = [
    {name = "LegacyCoinTrader Team", email = "team@legacycointrader.com"}
]
maintainers = [
    {name = "LegacyCoinTrader Team", email = "team@legacycointrader.com"}
]
keywords = ["trading", "cryptocurrency", "bitcoin", "ethereum", "finance", "algorithmic-trading"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    # Core Python
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0,<2.5.0",
    "pydantic-settings>=2.0.0,<2.1.0",

    # Async and Concurrency
    "asyncio-mqtt>=0.13.0",
    "aiohttp>=3.8.0,<4.0.0",
    "httpx>=0.24.0,<0.25.0",
    "uvloop>=0.17.0; sys_platform != 'win32'",

    # Cryptocurrency and Trading
    "ccxt>=4.0.0,<5.0.0",
    "solana>=0.32.0,<0.36.0",
    "solders>=0.20.0,<0.22.0",
    "pythclient>=0.1.0",

    # Machine Learning and Data Science
    "pandas>=1.5.0,<2.0.0",
    "numpy>=1.21.0,<1.25.0",
    "scikit-learn>=1.2.0,<2.0.0",
    "lightgbm>=4.0.0,<5.0.0",
    "scipy>=1.9.0,<2.0.0",
    "statsmodels>=0.13.0,<0.15.0",
    "numba>=0.56.0,<0.58.0",
    "joblib>=1.2.0,<2.0.0",

    # Web Framework and API
    "fastapi>=0.95.0,<0.101.0",
    "uvicorn[standard]>=0.21.0,<0.24.0",
    "starlette>=0.27.0,<0.28.0",
    "websockets>=10.0,<12.0",

    # Database and Caching
    "redis>=4.3.0,<5.0.0",
    "sqlalchemy>=1.4.0,<2.0.0",
    "alembic>=1.8.0,<2.0.0",
    "psycopg2-binary>=2.9.0,<3.0.0",
    "pymongo>=4.3.0,<5.0.0",

    # Security and Encryption
    "cryptography>=39.0.0,<42.0.0",
    "bcrypt>=4.0.0,<5.0.0",
    "passlib[bcrypt]>=1.7.0,<2.0.0",
    "python-jose[cryptography]>=3.3.0,<4.0.0",
    "python-multipart>=0.0.5",

    # Monitoring and Observability
    "prometheus-client>=0.16.0,<0.18.0",
    "structlog>=22.1.0,<23.2.0",
    "sentry-sdk[fastapi]>=1.15.0,<1.38.0",

    # Utilities
    "click>=8.0.0,<9.0.0",
    "rich>=12.0.0,<14.0.0",
    "typer>=0.7.0,<0.10.0",
    "loguru>=0.6.0,<0.8.0",
    "email-validator>=2.0.0,<3.0.0",

    # Telegram Bot
    "python-telegram-bot>=20.0,<21.0",

    # Financial and Technical Analysis
    "ta>=0.10.0",

    # Performance and Optimization
    "cachetools>=5.0.0,<6.0.0",
    "lru-dict>=1.1.0,<2.0.0",

    # Web Dashboard
    "jinja2>=3.0.0,<4.0.0",
    "aiofiles>=22.0.0,<24.0.0",

    # Configuration Management
    "dynaconf>=3.1.0,<4.0.0",

    # API Rate Limiting
    "slowapi>=0.1.8,<0.2.0",

    # Date and Time
    "pendulum>=2.1.0,<3.0.0",

    # Serialization
    "orjson>=3.8.0,<4.0.0",
    "msgpack>=1.0.0,<2.0.0",

    # Environment Detection
    "platformdirs>=2.5.0,<4.0.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=3.0.0,<4.0.0",
    "commitizen>=3.0.0,<4.0.0",
    "black>=22.0.0,<24.0.0",
    "isort>=5.10.0,<6.0.0",
    "flake8>=5.0.0,<7.0.0",
    "mypy>=1.0.0,<1.7.0",
    "bandit>=1.7.0,<2.0.0",
    "safety>=2.3.0,<3.0.0",
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<0.22.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "pytest-xdist>=3.0.0,<3.5.0",
    "pytest-benchmark>=4.0.0,<5.0.0",
    "pytest-html>=4.0.0,<5.0.0",
    "coverage>=7.0.0,<8.0.0",
    "mkdocs>=1.4.0,<2.0.0",
    "mkdocs-material>=9.0.0,<10.0.0",
]
gpu = [
    "torch>=2.0.0,<3.0.0",
    "torchvision>=0.15.0,<0.16.0",
    "torchaudio>=2.0.0,<3.0.0",
    "tensorflow>=2.13.0,<3.0.0",
    "jax>=0.4.0,<0.5.0",
    "jaxlib>=0.4.0,<0.5.0",
]
docs = [
    "sphinx>=5.0.0,<6.0.0",
    "sphinx-rtd-theme>=1.2.0,<2.0.0",
    "myst-parser>=0.18.0,<0.19.0",
    "sphinx-autodoc-typehints>=1.23.0,<2.0.0",
]

[project.scripts]
legacy-trader = "modern.src.trading_bot:main"
legacy-trader-dev = "modern.src.trading_bot:main"

[project.urls]
Homepage = "https://github.com/legacycointrader/legacy-coin-trader"
Documentation = "https://legacycointrader.readthedocs.io/"
Repository = "https://github.com/legacycointrader/legacy-coin-trader.git"
Issues = "https://github.com/legacycointrader/legacy-coin-trader/issues"
Changelog = "https://github.com/legacycointrader/legacy-coin-trader/blob/main/CHANGELOG.md"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["modern*"]
exclude = ["tests*", "docs*", "scripts*"]

[tool.setuptools.package-data]
"modern" = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | node_modules
  | venv
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["modern"]
known_third_party = [
    "aiohttp",
    "fastapi",
    "pydantic",
    "sqlalchemy",
    "redis",
    "ccxt",
    "pandas",
    "numpy",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "ccxt.*",
    "solana.*",
    "solders.*",
    "pythclient.*",
    "ta.*",
    "lightgbm.*",
    "numba.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=modern",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=90",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
    "performance: Performance tests",
    "security: Security-related tests",
    "database: Database-related tests",
    "api: API-related tests",
    "trading: Trading logic tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["modern"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/conftest.py",
    "*/migrations/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "docs", "scripts", "migrations"]
skips = ["B101", "B601"]  # Skip assert checks and shell usage

[tool.safety]
ignore = [
    "51457",  # PyYAML vulnerability - addressed in our version constraints
    "44715",  # requests vulnerability - addressed in our version constraints
]

[tool.commitizen]
name = "cz_conventional_commits"
version = "2.0.0"
tag_format = "v$version"
changelog_file = "CHANGELOG.md"
update_changelog_on_bump = true

[tool.pre-commit]
repos = [
    {repo = "https://github.com/pre-commit/pre-commit-hooks", rev = "v4.4.0", hooks = [
        {id = "trailing-whitespace"},
        {id = "end-of-file-fixer"},
        {id = "check-yaml"},
        {id = "check-added-large-files"},
        {id = "check-merge-conflict"},
        {id = "debug-statements"},
        {id = "check-docstring-first"},
    ]},
    {repo = "https://github.com/psf/black", rev = "23.7.0", hooks = [
        {id = "black", language_version = "python3.9"},
    ]},
    {repo = "https://github.com/pycqa/isort", rev = "5.12.0", hooks = [
        {id = "isort"},
    ]},
    {repo = "https://github.com/pycqa/flake8", rev = "6.0.0", hooks = [
        {id = "flake8"},
    ]},
    {repo = "https://github.com/pre-commit/mirrors-mypy", rev = "v1.5.1", hooks = [
        {id = "mypy"},
    ]},
    {repo = "https://github.com/PyCQA/bandit", rev = "1.7.5", hooks = [
        {id = "bandit", args = ["-c", "pyproject.toml"]},
    ]},
    {repo = "https://github.com/Lucas-C/pre-commit-hooks", rev = "v1.5.1", hooks = [
        {id = "insert-license", args = ["--license-filepath", "LICENSE", "--comment-style", "#"]},
    ]},
]

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]  # assert false

[tool.ruff.isort]
known-first-party = ["modern"]

[tool.ruff.mypy]
python-version = "3.9"
