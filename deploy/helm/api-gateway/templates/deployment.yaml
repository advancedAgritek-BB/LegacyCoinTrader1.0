apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api-gateway.fullname" . }}
  labels:
{{ include "api-gateway.labels" . | indent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
{{ include "api-gateway.selectorLabels" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "api-gateway.selectorLabels" . | indent 8 }}
{{- with .Values.podLabels }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{- range .Values.imagePullSecrets }}
        - name: {{ .name }}
{{- end }}
{{- end }}
{{- if or .Values.serviceAccount.create .Values.serviceAccount.name }}
      serviceAccountName: {{ include "api-gateway.serviceAccountName" . }}
{{- end }}
{{- with .Values.podSecurityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.extraInitContainers }}
      initContainers:
{{ toYaml . | indent 8 }}
{{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- with .Values.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
{{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
{{- $featureFlags := default dict .Values.featureFlags }}
{{- $cutoverControls := default dict .Values.cutoverControls }}
{{- if or .Values.env (gt (len (keys $featureFlags)) 0) (gt (len (keys $cutoverControls)) 0) }}
          env:
{{- if .Values.env }}
{{ toYaml .Values.env | indent 12 }}
{{- end }}
{{- range $name, $value := $featureFlags }}
            - name: {{ $name }}
              value: {{ $value | quote }}
{{- end }}
{{- range $name, $value := $cutoverControls }}
            - name: {{ $name }}
              value: {{ $value | quote }}
{{- end }}
{{- end }}
{{- if .Values.envFrom }}
          envFrom:
{{ toYaml .Values.envFrom | indent 12 }}
{{- end }}
{{- if .Values.livenessProbe }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
{{- end }}
{{- if .Values.readinessProbe }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
{{- end }}
{{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- end }}
{{- if .Values.extraVolumeMounts }}
          volumeMounts:
{{ toYaml .Values.extraVolumeMounts | indent 12 }}
{{- end }}
{{- if .Values.extraContainers }}
{{ toYaml .Values.extraContainers | indent 8 }}
{{- end }}
{{- if .Values.extraVolumes }}
      volumes:
{{ toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
